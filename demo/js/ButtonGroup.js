// Generated by CoffeeScript 1.8.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Poe.ButtonGroup = (function(_super) {
    __extends(ButtonGroup, _super);

    function ButtonGroup(toolbar, buttons) {
      this.handleRadio = __bind(this.handleRadio, this);
      var button, _i, _len;
      this.container = $('<div class="btn-group" role="group"></div>');
      toolbar.element.append(this.container);
      if (buttons) {
        for (_i = 0, _len = buttons.length; _i < _len; _i++) {
          button = buttons[_i];
          this.container.append(button.element());
        }
        this.buttons = buttons;
      } else {
        this.buttons = [];
      }
    }

    ButtonGroup.prototype.element = function() {
      return this.container;
    };

    ButtonGroup.prototype.setRadio = function(radio) {
      if (radio) {
        return this.container.on('click', 'button', this.handleRadio);
      } else {
        return this.container.off('click', 'button', this.handleRadio);
      }
    };

    ButtonGroup.prototype.handleRadio = function(event) {
      var button, _i, _len, _ref, _results;
      _ref = this.buttons;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        button = _ref[_i];
        if (event.target === button.element()[0]) {
          _results.push(button.active(true));
        } else {
          _results.push(button.active(false));
        }
      }
      return _results;
    };

    return ButtonGroup;

  })(Poe.ToolBarItem);

}).call(this);

//# sourceMappingURL=ButtonGroup.js.map
